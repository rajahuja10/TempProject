"""add_online_status

Revision ID: 47c80f6b0123
Revises: 01e9a0399784
Create Date: 2020-05-13 22:49:01.493995

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '47c80f6b0123'
down_revision = '01e9a0399784'
branch_labels = None
depends_on = None

status = postgresql.ENUM('SHOW', 'HIDE', 'DISABLE', name='status')


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    status.create(op.get_bind())
    op.drop_table('officeclosure')
    op.drop_table('holiday')
    op.add_column('office',
                  sa.Column('online_status', sa.Enum('SHOW', 'HIDE', 'DISABLE', name='status'), nullable=True))
    op.drop_column('office', 'disable_online_appointment')
    op.execute("update office set online_status='SHOW' where appointments_enabled_ind = 1")
    op.execute("update office set online_status='HIDE' where appointments_enabled_ind = 0")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('office', sa.Column('disable_online_appointment', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_column('office', 'online_status')
    op.create_table('holiday',
                    sa.Column('holiday_id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('holiday', sa.DATE(), autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('holiday_id', name='holiday_pkey')
                    )
    op.create_table('officeclosure',
                    sa.Column('closure_id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('office_id', sa.INTEGER(), autoincrement=False, nullable=False),
                    sa.Column('start_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
                    sa.Column('end_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
                    sa.Column('users_notified', sa.BOOLEAN(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['office_id'], ['office.office_id'], name='officeclosure_office_id_fkey'),
                    sa.PrimaryKeyConstraint('closure_id', name='officeclosure_pkey')
                    )

    status.drop(op.get_bind())

    # ### end Alembic commands ###
